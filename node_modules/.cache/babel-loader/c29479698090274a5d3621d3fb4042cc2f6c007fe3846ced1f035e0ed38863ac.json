{"ast":null,"code":"var _jsxFileName = \"/home/dagan/bin/React/pokedex2/src/features/Pokemon.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from \"react\";\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const pokemonApi = createApi({\n  reducerPath: 'pokemonApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://pokeapi.co/api/v2/'\n  }),\n  endpoints: builder => ({\n    getPokemonById: builder.query({\n      query: id => `pokemon/${id}`\n    })\n  })\n});\nexport const {\n  useGetPokemonByIdQuery\n} = pokemonApi;\nexport const Pokemon = _ref => {\n  _s();\n  let {\n    id,\n    children\n  } = _ref;\n  const [cachedData, setCachedData] = useState({});\n  const [url, setUrl] = useState(\"\");\n  const getData = async query => {\n    const {\n      data,\n      error,\n      isLoading\n    } = query(id);\n    await data;\n    return data;\n  };\n  const data = getData(useGetPokemonByIdQuery);\n  const urlReducer = (setUrl, action) => {\n    switch (action.type) {\n      case 1:\n        setUrl(\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/versions/generation-i/red-blue/back/${id}.png\");\n        return;\n      case 2:\n        setUrl(\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/versions/generation-ii/crystal/${id}.png\");\n        return;\n    }\n  };\n  data.then(results => {\n    if (results !== undefined) {\n      setCachedData(results);\n      console.log(results);\n    }\n  });\n\n  //const {name,setName} = useState((data!==undefined) ? data.name : \"undefined\");\n\n  //const number = (isLoading ? 0 : data.id);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: url\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(Pokemon, \"sjix6PXFdgsyGd5KBnvKmmgYFcc=\");\n_c = Pokemon;\nexport default Pokemon;\nvar _c;\n$RefreshReg$(_c, \"Pokemon\");","map":{"version":3,"names":["React","useState","createApi","fetchBaseQuery","pokemonApi","reducerPath","baseQuery","baseUrl","endpoints","builder","getPokemonById","query","id","useGetPokemonByIdQuery","Pokemon","children","cachedData","setCachedData","url","setUrl","getData","data","error","isLoading","urlReducer","action","type","then","results","undefined","console","log"],"sources":["/home/dagan/bin/React/pokedex2/src/features/Pokemon.tsx"],"sourcesContent":["import React from 'react';\nimport { useEffect, useState } from \"react\";\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { PokeProfile } from './types';\n\nexport const pokemonApi = createApi({\n  reducerPath: 'pokemonApi',\n  baseQuery: fetchBaseQuery({ baseUrl: 'https://pokeapi.co/api/v2/' }),\n  endpoints: builder => ({\n    getPokemonById: builder.query({\n      query: (id: string) => `pokemon/${id}`\n    })\n  })\n})\n\nexport const { useGetPokemonByIdQuery } = pokemonApi\n\nexport const Pokemon = ({id, children})=>\n{       \n    const [cachedData, setCachedData] = useState({});\n    const [url, setUrl] = useState(\"\");\n\n    const getData = async (query)=>{\n        const {data, error, isLoading} = query(id);\n        await data;\n        return data as PokeProfile[];\n    }\n    const data = getData(useGetPokemonByIdQuery);\n\n    const urlReducer = (setUrl, action) => {\n        switch(action.type)\n        {\n            case 1:\n                setUrl(\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/versions/generation-i/red-blue/back/${id}.png\");\n                return;\n            case 2:\n                setUrl(\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/versions/generation-ii/crystal/${id}.png\");\n                return;\n        }\n    }\n\n    data.then((results)=>{\n        if(results!==undefined)\n        {\n            setCachedData(results);\n            console.log(results);\n        }\n    });\n\n    //const {name,setName} = useState((data!==undefined) ? data.name : \"undefined\");\n\n    //const number = (isLoading ? 0 : data.id);\n\n    return (\n        <div>\n            {url}\n        </div>\n    );\n}\n\nexport default Pokemon;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAoBC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAAA;AAGxE,OAAO,MAAMC,UAAU,GAAGF,SAAS,CAAC;EAClCG,WAAW,EAAE,YAAY;EACzBC,SAAS,EAAEH,cAAc,CAAC;IAAEI,OAAO,EAAE;EAA6B,CAAC,CAAC;EACpEC,SAAS,EAAEC,OAAO,KAAK;IACrBC,cAAc,EAAED,OAAO,CAACE,KAAK,CAAC;MAC5BA,KAAK,EAAGC,EAAU,IAAM,WAAUA,EAAG;IACvC,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEC;AAAuB,CAAC,GAAGT,UAAU;AAEpD,OAAO,MAAMU,OAAO,GAAG,QACvB;EAAA;EAAA,IADwB;IAACF,EAAE;IAAEG;EAAQ,CAAC;EAElC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAACiB,GAAG,EAAEC,MAAM,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAElC,MAAMmB,OAAO,GAAG,MAAOT,KAAK,IAAG;IAC3B,MAAM;MAACU,IAAI;MAAEC,KAAK;MAAEC;IAAS,CAAC,GAAGZ,KAAK,CAACC,EAAE,CAAC;IAC1C,MAAMS,IAAI;IACV,OAAOA,IAAI;EACf,CAAC;EACD,MAAMA,IAAI,GAAGD,OAAO,CAACP,sBAAsB,CAAC;EAE5C,MAAMW,UAAU,GAAG,CAACL,MAAM,EAAEM,MAAM,KAAK;IACnC,QAAOA,MAAM,CAACC,IAAI;MAEd,KAAK,CAAC;QACFP,MAAM,CAAC,wHAAwH,CAAC;QAChI;MACJ,KAAK,CAAC;QACFA,MAAM,CAAC,mHAAmH,CAAC;QAC3H;IAAO;EAEnB,CAAC;EAEDE,IAAI,CAACM,IAAI,CAAEC,OAAO,IAAG;IACjB,IAAGA,OAAO,KAAGC,SAAS,EACtB;MACIZ,aAAa,CAACW,OAAO,CAAC;MACtBE,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;IACxB;EACJ,CAAC,CAAC;;EAEF;;EAEA;;EAEA,oBACI;IAAA,UACKV;EAAG;IAAA;IAAA;IAAA;EAAA,QACF;AAEd,CAAC;AAAA,GAzCYJ,OAAO;AAAA,KAAPA,OAAO;AA2CpB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}