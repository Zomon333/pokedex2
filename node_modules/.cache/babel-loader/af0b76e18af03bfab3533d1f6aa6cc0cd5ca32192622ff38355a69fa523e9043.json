{"ast":null,"code":"var _jsxFileName = \"/home/dagan/bin/React/pokedex2/src/features/Pokemon.js\",\n  _s = $RefreshSig$();\nimport { useGetPokemonByIdQuery } from \"./counter/counterAPI.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Pokemon = _ref => {\n  _s();\n  let {\n    id,\n    children\n  } = _ref;\n  const [queriedData, setQueriedData] = useState({\n    number: 1,\n    types: {\n      slot: 1,\n      type: {\n        name: \"\",\n        url: \"\"\n      }\n    }[0],\n    height: 1,\n    weight: 1,\n    sprites: {}[0],\n    abilities: {}[0]\n  });\n  const {\n    data,\n    error,\n    isLoading\n  } = useGetPokemonByIdQuery(id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: JSON.stringify(data)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(Pokemon, \"dAmJ7hOY4gbwImEuMXFz2w3a0WQ=\", false, function () {\n  return [useGetPokemonByIdQuery];\n});\n_c = Pokemon;\nexport default Pokemon;\nvar _c;\n$RefreshReg$(_c, \"Pokemon\");","map":{"version":3,"names":["useGetPokemonByIdQuery","Pokemon","id","children","queriedData","setQueriedData","useState","number","types","slot","type","name","url","height","weight","sprites","abilities","data","error","isLoading","JSON","stringify"],"sources":["/home/dagan/bin/React/pokedex2/src/features/Pokemon.js"],"sourcesContent":["import { useGetPokemonByIdQuery } from \"./counter/counterAPI.tsx\";\n\nexport const Pokemon = ({id, children})=>\n{\n    const [queriedData, setQueriedData] = useState(\n        {\n            number: 1,\n            types: \n            {\n                slot: 1,\n                type: \n                {\n                    name: \"\",\n                    url: \"\",\n                },\n            }[0],\n            \n            height: 1,\n            weight: 1,\n            \n            sprites: {}[0],\n        \n            abilities: \n            {\n        \n            }[0],\n        }\n    )\n    const { data, error, isLoading } = useGetPokemonByIdQuery(id);\n\n    return (\n        <div>\n            {JSON.stringify(data)}\n        </div>\n    );\n}\n\nexport default Pokemon;"],"mappings":";;AAAA,SAASA,sBAAsB,QAAQ,0BAA0B;AAAC;AAElE,OAAO,MAAMC,OAAO,GAAG,QACvB;EAAA;EAAA,IADwB;IAACC,EAAE;IAAEC;EAAQ,CAAC;EAElC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGC,QAAQ,CAC1C;IACIC,MAAM,EAAE,CAAC;IACTC,KAAK,EACL;MACIC,IAAI,EAAE,CAAC;MACPC,IAAI,EACJ;QACIC,IAAI,EAAE,EAAE;QACRC,GAAG,EAAE;MACT;IACJ,CAAC,CAAC,CAAC,CAAC;IAEJC,MAAM,EAAE,CAAC;IACTC,MAAM,EAAE,CAAC;IAETC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAEdC,SAAS,EACT,CAEA,CAAC,CAAC,CAAC;EACP,CAAC,CACJ;EACD,MAAM;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAU,CAAC,GAAGnB,sBAAsB,CAACE,EAAE,CAAC;EAE7D,oBACI;IAAA,UACKkB,IAAI,CAACC,SAAS,CAACJ,IAAI;EAAC;IAAA;IAAA;IAAA;EAAA,QACnB;AAEd,CAAC;AAAA,GAjCYhB,OAAO;EAAA,QA0BmBD,sBAAsB;AAAA;AAAA,KA1BhDC,OAAO;AAmCpB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}