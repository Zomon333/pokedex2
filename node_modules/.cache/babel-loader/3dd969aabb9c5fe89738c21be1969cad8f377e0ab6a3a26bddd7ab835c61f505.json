{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n/*\n    I've confirmed this works.\n*/\nexport const getPokemon = async () => {\n  const tempFunc = async () => {\n    const response = await fetch(\"https://pokeapi.co/api/v2/pokemon?limit=151&offset=0\");\n    const json = await response.json();\n    const data = json.results;\n    return data;\n  };\n  let data = await tempFunc();\n  let results = [];\n  for (let i = 0; i < data.length; i++) {\n    const response = await fetch(data[i].url);\n    const json = await response.json();\n    results[i] = json;\n  }\n  return await results;\n};\nexport const pokemonApi = createApi({\n  reducerPath: 'pokemonApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://pokeapi.co/api/v2/'\n  }),\n  endpoints: builder => ({\n    getPokemonById: builder.query({\n      query: id => `pokemon/${id}`\n    })\n  })\n});\nexport const {\n  useGetPokemonByIdQuery\n} = pokemonApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","getPokemon","tempFunc","response","fetch","json","data","results","i","length","url","pokemonApi","reducerPath","baseQuery","baseUrl","endpoints","builder","getPokemonById","query","id","useGetPokemonByIdQuery"],"sources":["/home/dagan/bin/React/pokedex2/src/app/api-pokemon.tsx"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { Stub } from '../features/types'\n\nexport type PokemonType = {\n    number: Number;\n    types: \n    {\n        slot: Number;\n        type: Stub;\n    }[];\n    \n    height: Number;\n    weight: Number;\n    \n    sprites: {}[];\n\n    abilities: \n    {\n\n    }[];\n}\n\n/*\n    I've confirmed this works.\n*/\nexport const getPokemon = async () => {\n    const tempFunc = async ()=>{\n        const response = await fetch(\"https://pokeapi.co/api/v2/pokemon?limit=151&offset=0\");\n        const json = await response.json();\n    \n        const data = (json.results) as Stub[];\n\n        return data;\n    };\n\n    let data=(await tempFunc());\n\n    let results:{}[] = [];\n    \n    for(let i = 0; i<data.length; i++)\n    {\n        const response = await fetch(data[i].url);\n        const json = await response.json();\n\n        results[i] = json;\n    }\n\n    return await results;\n}\n\n\nexport const pokemonApi = createApi({\n  reducerPath: 'pokemonApi',\n  baseQuery: fetchBaseQuery({ baseUrl: 'https://pokeapi.co/api/v2/' }),\n  endpoints: builder => ({\n    getPokemonById: builder.query({\n      query: (id: string) => `pokemon/${id}`\n    })\n  })\n})\n\nexport const { useGetPokemonByIdQuery } = pokemonApi"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAsBxE;AACA;AACA;AACA,OAAO,MAAMC,UAAU,GAAG,YAAY;EAClC,MAAMC,QAAQ,GAAG,YAAU;IACvB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sDAAsD,CAAC;IACpF,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,EAAE;IAElC,MAAMC,IAAI,GAAID,IAAI,CAACE,OAAkB;IAErC,OAAOD,IAAI;EACf,CAAC;EAED,IAAIA,IAAI,GAAE,MAAMJ,QAAQ,EAAG;EAE3B,IAAIK,OAAY,GAAG,EAAE;EAErB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAACF,IAAI,CAACG,MAAM,EAAED,CAAC,EAAE,EACjC;IACI,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAACE,IAAI,CAACE,CAAC,CAAC,CAACE,GAAG,CAAC;IACzC,MAAML,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,EAAE;IAElCE,OAAO,CAACC,CAAC,CAAC,GAAGH,IAAI;EACrB;EAEA,OAAO,MAAME,OAAO;AACxB,CAAC;AAGD,OAAO,MAAMI,UAAU,GAAGZ,SAAS,CAAC;EAClCa,WAAW,EAAE,YAAY;EACzBC,SAAS,EAAEb,cAAc,CAAC;IAAEc,OAAO,EAAE;EAA6B,CAAC,CAAC;EACpEC,SAAS,EAAEC,OAAO,KAAK;IACrBC,cAAc,EAAED,OAAO,CAACE,KAAK,CAAC;MAC5BA,KAAK,EAAGC,EAAU,IAAM,WAAUA,EAAG;IACvC,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEC;AAAuB,CAAC,GAAGT,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}