{"ast":null,"code":"var _jsxFileName = \"/home/dagan/bin/React/pokedex2/src/App.js\";\nimport React from 'react';\nimport { Pokemon } from './features/Pokemon.tsx';\nimport { useGetPokemonByIdQuery } from './features/Pokemon.tsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getArrayStub(len) {\n  /*\n    I know this looks questionable, but hear me out;\n    I'm making an array of 151 integers so I can map over it. Each index of our array is a pokemon.\n    The data isn't baked, technically.\n  */\n  let arr = [len];\n  for (let i = 0; i < len; i++) {\n    arr[i] = i + 1;\n  }\n  return arr;\n}\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Pokemon","useGetPokemonByIdQuery","getArrayStub","len","arr","i","App"],"sources":["/home/dagan/bin/React/pokedex2/src/App.js"],"sourcesContent":["import React from 'react';\nimport { Pokemon } from './features/Pokemon.tsx'\nimport { useGetPokemonByIdQuery } from './features/Pokemon.tsx'\n\nfunction getArrayStub(len)\n{\n    /*\n      I know this looks questionable, but hear me out;\n      I'm making an array of 151 integers so I can map over it. Each index of our array is a pokemon.\n      The data isn't baked, technically.\n    */\n    let arr=[len];\n    for(let i=0; i<len; i++)\n    {\n      arr[i]=i+1;\n    }\n    return arr\n}\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,sBAAsB,QAAQ,wBAAwB;AAAA;AAE/D,SAASC,YAAY,CAACC,GAAG,EACzB;EACI;AACJ;AACA;AACA;AACA;EACI,IAAIC,GAAG,GAAC,CAACD,GAAG,CAAC;EACb,KAAI,IAAIE,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACF,GAAG,EAAEE,CAAC,EAAE,EACvB;IACED,GAAG,CAACC,CAAC,CAAC,GAACA,CAAC,GAAC,CAAC;EACZ;EACA,OAAOD,GAAG;AACd;AAEA,SAASE,GAAG,GAAG;EAEb,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB;MAAQ,SAAS,EAAC;IAAY;MAAA;MAAA;MAAA;IAAA;EAErB;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,KATQA,GAAG;AAWZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}