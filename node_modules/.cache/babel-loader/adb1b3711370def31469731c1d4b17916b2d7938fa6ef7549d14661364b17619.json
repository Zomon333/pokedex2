{"ast":null,"code":"var _jsxFileName = \"/home/dagan/bin/React/pokedex2/src/features/Pokemon.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useEffect, useState } from \"react\";\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nimport Card from '@mui/material/Card';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\n/*\n    A non-null initial state for PokeProfile\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  abilities: [],\n  base_experience: 0,\n  forms: [],\n  game_indices: [],\n  height: 0,\n  held_items: [],\n  id: 0,\n  is_default: false,\n  location_area_encounters: \"\",\n  moves: [],\n  name: \"\",\n  order: 0,\n  past_types: [],\n  species: {\n    name: \"\",\n    url: \"\"\n  },\n  sprites: [],\n  stats: [],\n  types: [],\n  weight: 0\n};\nexport const pokemonApi = createApi({\n  reducerPath: 'pokemonApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://pokeapi.co/api/v2/'\n  }),\n  endpoints: builder => ({\n    getPokemonById: builder.query({\n      query: id => `pokemon/${id}`\n    })\n  })\n});\nexport const {\n  useGetPokemonByIdQuery\n} = pokemonApi;\nexport const Pokemon = _ref => {\n  _s();\n  let {\n    id,\n    children\n  } = _ref;\n  const {\n    data,\n    error,\n    isLoading\n  } = useGetPokemonByIdQuery(id);\n  const [cachedData, setCachedData] = useState(initialState);\n  const [isReady, setIsReady] = useState(false);\n  const [gen, setGen] = useState(1);\n  const [url, setUrl] = useState(\"\");\n  const [typeStr, setTypeStr] = useState(\"type\");\n  useEffect(() => {\n    setCachedData(initialState);\n    (async () => {\n      await data;\n    })();\n    setCachedData(data);\n    setIsReady(true);\n  }, [data, error, isLoading]);\n  const typer = types => {\n    let defState = \"type \";\n    let futureTypes = types;\n    futureTypes.map(instance => {\n      defState.concat(instance.type.name);\n      defState.concat(\" \");\n      console.log(defState);\n    });\n    return futureTypes;\n  };\n\n  /*\n   [ ] User must be to view the sprite of each Pokemon in your Pokedex.\n  [ ] User must be able to switch between the sprites from each generation (1-6).\n  [ ] User must view basic information about the Pokemon (Number, Type, Height in Meters, Weight in Kilograms, Abilities)\n                <div>Type: { isReady ? JSON.stringify(cachedData.types) : \"Loading...\"} </div>\n              <div>Abilities: { isReady ? JSON.stringify(cachedData.abilities) : \"Loading...\"} </div>\n   */\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      padding: \"0.4em\",\n      paddingBottom: \"1.2em\",\n      margin: \"3em\",\n      float: \"left\",\n      width: \"25vw\"\n    },\n    className: typeStr,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        padding: \"1em\"\n      },\n      children: cachedData === undefined ? \"Loading...\" : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Name: \", isReady ? cachedData.name : \"Loading...\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Number: \", isReady ? cachedData.id : \"Loading...\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Height: \", isReady ? cachedData.height : \"Loading...\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Weight (kg): \", isReady ? cachedData.weight : \"Loading...\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Types: \", isReady ? typer(cachedData.types) : \"Loading...\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 13\n  }, this);\n};\n_s(Pokemon, \"qqZEtIwWkCoXT3TVQryws9YTiZU=\", false, function () {\n  return [useGetPokemonByIdQuery];\n});\n_c = Pokemon;\nexport default Pokemon;\nvar _c;\n$RefreshReg$(_c, \"Pokemon\");","map":{"version":3,"names":["React","useEffect","useState","createApi","fetchBaseQuery","Card","initialState","abilities","base_experience","forms","game_indices","height","held_items","id","is_default","location_area_encounters","moves","name","order","past_types","species","url","sprites","stats","types","weight","pokemonApi","reducerPath","baseQuery","baseUrl","endpoints","builder","getPokemonById","query","useGetPokemonByIdQuery","Pokemon","children","data","error","isLoading","cachedData","setCachedData","isReady","setIsReady","gen","setGen","setUrl","typeStr","setTypeStr","typer","defState","futureTypes","map","instance","concat","type","console","log","padding","paddingBottom","margin","float","width","undefined"],"sources":["/home/dagan/bin/React/pokedex2/src/features/Pokemon.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useEffect, useState } from \"react\";\n\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nimport Button from '@mui/material/Button'\nimport Card from '@mui/material/Card';\n\nimport { PokeProfile, Type} from './types';\n\n\n\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\n/*\n    A non-null initial state for PokeProfile\n*/\nconst initialState: PokeProfile = {\n    abilities: [],\n    base_experience: 0,\n    forms: [],\n    game_indices: [],\n    height: 0,\n    held_items: [],\n    id: 0,\n    is_default: false,\n    location_area_encounters: \"\",\n    moves: [],\n    name: \"\",\n    order: 0,\n    past_types: [],\n    species: {\n        name:\"\",\n        url:\"\"\n    },\n    sprites: [],\n    stats: [],\n    types: [],\n    weight: 0,\n};\n\nexport const pokemonApi = createApi({\n  reducerPath: 'pokemonApi',\n  baseQuery: fetchBaseQuery({ baseUrl: 'https://pokeapi.co/api/v2/' }),\n  endpoints: builder => ({\n    getPokemonById: builder.query({\n      query: (id: string) => `pokemon/${id}`\n    })\n  })\n})\nexport const { useGetPokemonByIdQuery } = pokemonApi\n\n\nexport const Pokemon = ({id, children})=>\n{           \n    const {data, error, isLoading} = useGetPokemonByIdQuery(id);\n\n    const [cachedData, setCachedData] = useState(initialState);\n    const [isReady, setIsReady] = useState(false);\n\n    const [gen, setGen] = useState(1);\n    const [url, setUrl] = useState(\"\");\n\n    const [typeStr, setTypeStr] = useState(\"type\");\n\n    useEffect(()=>{\n        setCachedData(initialState);\n        (async()=>{await data})();\n        setCachedData(data);\n        setIsReady(true);\n    },[data, error, isLoading])\n\n\n    const typer = (types: {}[]) =>\n    {\n        let defState = \"type \";\n        let futureTypes: Type[] = types;\n        futureTypes.map(\n            (instance)=>{\n                defState.concat(instance.type.name);\n                defState.concat(\" \");\n                console.log(defState);\n            }\n        );\n        \n\n        return futureTypes;\n    }\n\n    /*\n\n    [ ] User must be to view the sprite of each Pokemon in your Pokedex.\n    [ ] User must be able to switch between the sprites from each generation (1-6).\n    [ ] User must view basic information about the Pokemon (Number, Type, Height in Meters, Weight in Kilograms, Abilities)\n\n\n                <div>Type: { isReady ? JSON.stringify(cachedData.types) : \"Loading...\"} </div>\n                <div>Abilities: { isReady ? JSON.stringify(cachedData.abilities) : \"Loading...\"} </div>\n\n    */\n\n    return (\n\n            <Card style={{padding:\"0.4em\", paddingBottom:\"1.2em\", margin:\"3em\", float:\"left\", width:\"25vw\"}} className={typeStr}>\n                <Card style={{padding:\"1em\"}}>\n                    {(cachedData===undefined) ? \"Loading...\" : \n                    <>\n                        <div>Name: { isReady ? cachedData.name : \"Loading...\"} </div>\n                        <div>Number: { isReady ? cachedData.id : \"Loading...\"} </div>\n                        <div>Height: { isReady ? cachedData.height : \"Loading...\"} </div>\n                        <div>Weight (kg): { isReady ? cachedData.weight : \"Loading...\"} </div>\n                        <br />\n                        <br />\n                        <div>Types: { isReady ? typer(cachedData.types) : \"Loading...\"} </div>\n                        <br />\n                    </>\n                    }\n                </Card>\n            </Card>\n\n    );\n}\n\nexport default Pokemon;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}